$comment
	File created using the following command:
		vcd file ADS_project.msim.vcd -direction
$end
$date
	Thu Jul 29 22:40:25 2021
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module ads_project_vhd_vec_tst $end
$var wire 1 ! clk $end
$var wire 1 " cs $end
$var wire 1 # miso $end
$var wire 1 $ mosi $end
$var wire 1 % sck $end
$var wire 1 & seg_select [3] $end
$var wire 1 ' seg_select [2] $end
$var wire 1 ( seg_select [1] $end
$var wire 1 ) seg_select [0] $end
$var wire 1 * segments [6] $end
$var wire 1 + segments [5] $end
$var wire 1 , segments [4] $end
$var wire 1 - segments [3] $end
$var wire 1 . segments [2] $end
$var wire 1 / segments [1] $end
$var wire 1 0 segments [0] $end

$scope module i1 $end
$var wire 1 1 gnd $end
$var wire 1 2 vcc $end
$var wire 1 3 unknown $end
$var wire 1 4 devoe $end
$var wire 1 5 devclrn $end
$var wire 1 6 devpor $end
$var wire 1 7 ww_devoe $end
$var wire 1 8 ww_devclrn $end
$var wire 1 9 ww_devpor $end
$var wire 1 : ww_miso $end
$var wire 1 ; ww_mosi $end
$var wire 1 < ww_cs $end
$var wire 1 = ww_sck $end
$var wire 1 > ww_clk $end
$var wire 1 ? ww_seg_select [3] $end
$var wire 1 @ ww_seg_select [2] $end
$var wire 1 A ww_seg_select [1] $end
$var wire 1 B ww_seg_select [0] $end
$var wire 1 C ww_segments [6] $end
$var wire 1 D ww_segments [5] $end
$var wire 1 E ww_segments [4] $end
$var wire 1 F ww_segments [3] $end
$var wire 1 G ww_segments [2] $end
$var wire 1 H ww_segments [1] $end
$var wire 1 I ww_segments [0] $end
$var wire 1 J \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit[16]~clkctrl_INCLK_bus\ [3] $end
$var wire 1 K \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit[16]~clkctrl_INCLK_bus\ [2] $end
$var wire 1 L \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit[16]~clkctrl_INCLK_bus\ [1] $end
$var wire 1 M \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit[16]~clkctrl_INCLK_bus\ [0] $end
$var wire 1 N \clk~inputclkctrl_INCLK_bus\ [3] $end
$var wire 1 O \clk~inputclkctrl_INCLK_bus\ [2] $end
$var wire 1 P \clk~inputclkctrl_INCLK_bus\ [1] $end
$var wire 1 Q \clk~inputclkctrl_INCLK_bus\ [0] $end
$var wire 1 R \miso~output_o\ $end
$var wire 1 S \seg_select[0]~output_o\ $end
$var wire 1 T \seg_select[1]~output_o\ $end
$var wire 1 U \seg_select[2]~output_o\ $end
$var wire 1 V \seg_select[3]~output_o\ $end
$var wire 1 W \segments[0]~output_o\ $end
$var wire 1 X \segments[1]~output_o\ $end
$var wire 1 Y \segments[2]~output_o\ $end
$var wire 1 Z \segments[3]~output_o\ $end
$var wire 1 [ \segments[4]~output_o\ $end
$var wire 1 \ \segments[5]~output_o\ $end
$var wire 1 ] \segments[6]~output_o\ $end
$var wire 1 ^ \clk~input_o\ $end
$var wire 1 _ \clk~inputclkctrl_outclk\ $end
$var wire 1 ` \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita0~combout\ $end
$var wire 1 a \~GND~combout\ $end
$var wire 1 b \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita16~COUT\ $end
$var wire 1 c \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita17~combout\ $end
$var wire 1 d \clocking|LPM_COUNTER_component|auto_generated|cmpr1|aneb_result_wire[0]~2_combout\ $end
$var wire 1 e \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita17~COUT\ $end
$var wire 1 f \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita18~combout\ $end
$var wire 1 g \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita18~COUT\ $end
$var wire 1 h \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita19~combout\ $end
$var wire 1 i \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita19~COUT\ $end
$var wire 1 j \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita20~combout\ $end
$var wire 1 k \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita20~COUT\ $end
$var wire 1 l \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita21~combout\ $end
$var wire 1 m \clocking|LPM_COUNTER_component|auto_generated|cmpr1|aneb_result_wire[0]~1_combout\ $end
$var wire 1 n \clocking|LPM_COUNTER_component|auto_generated|cmpr1|aneb_result_wire[0]~3_combout\ $end
$var wire 1 o \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita21~COUT\ $end
$var wire 1 p \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita22~combout\ $end
$var wire 1 q \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita22~COUT\ $end
$var wire 1 r \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita23~combout\ $end
$var wire 1 s \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita23~COUT\ $end
$var wire 1 t \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita24~combout\ $end
$var wire 1 u \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita24~COUT\ $end
$var wire 1 v \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita25~combout\ $end
$var wire 1 w \clocking|LPM_COUNTER_component|auto_generated|cmpr1|aneb_result_wire[0]~0_combout\ $end
$var wire 1 x \clocking|LPM_COUNTER_component|auto_generated|cmpr1|aneb_result_wire[0]~4_combout\ $end
$var wire 1 y \clocking|LPM_COUNTER_component|auto_generated|cmpr1|aneb_result_wire[0]~6_combout\ $end
$var wire 1 z \clocking|LPM_COUNTER_component|auto_generated|cmpr1|aneb_result_wire[0]~7_combout\ $end
$var wire 1 { \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita25~COUT\ $end
$var wire 1 | \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita25~0_combout\ $end
$var wire 1 } \clocking|LPM_COUNTER_component|auto_generated|cmpr1|aneb_result_wire[0]~5_combout\ $end
$var wire 1 ~ \clocking|LPM_COUNTER_component|auto_generated|cout_actual~combout\ $end
$var wire 1 !! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita0~COUT\ $end
$var wire 1 "! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita1~combout\ $end
$var wire 1 #! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita1~COUT\ $end
$var wire 1 $! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita2~combout\ $end
$var wire 1 %! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita2~COUT\ $end
$var wire 1 &! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita3~combout\ $end
$var wire 1 '! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita3~COUT\ $end
$var wire 1 (! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita4~combout\ $end
$var wire 1 )! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita4~COUT\ $end
$var wire 1 *! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita5~combout\ $end
$var wire 1 +! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita5~COUT\ $end
$var wire 1 ,! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita6~combout\ $end
$var wire 1 -! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita6~COUT\ $end
$var wire 1 .! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita7~combout\ $end
$var wire 1 /! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita7~COUT\ $end
$var wire 1 0! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita8~combout\ $end
$var wire 1 1! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita8~COUT\ $end
$var wire 1 2! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita9~combout\ $end
$var wire 1 3! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita9~COUT\ $end
$var wire 1 4! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita10~combout\ $end
$var wire 1 5! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita10~COUT\ $end
$var wire 1 6! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita11~combout\ $end
$var wire 1 7! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita11~COUT\ $end
$var wire 1 8! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita12~combout\ $end
$var wire 1 9! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita12~COUT\ $end
$var wire 1 :! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita13~combout\ $end
$var wire 1 ;! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita13~COUT\ $end
$var wire 1 <! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita14~combout\ $end
$var wire 1 =! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita14~COUT\ $end
$var wire 1 >! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita15~combout\ $end
$var wire 1 ?! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita15~COUT\ $end
$var wire 1 @! \clocking|LPM_COUNTER_component|auto_generated|counter_comb_bita16~combout\ $end
$var wire 1 A! \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit[16]~clkctrl_outclk\ $end
$var wire 1 B! \display|seg_select[1]~feeder_combout\ $end
$var wire 1 C! \display|seg_select~1_combout\ $end
$var wire 1 D! \display|seg_select~0_combout\ $end
$var wire 1 E! \display|seg_select~2_combout\ $end
$var wire 1 F! \mosi~input_o\ $end
$var wire 1 G! \cs~input_o\ $end
$var wire 1 H! \spi|cs_record[0]~feeder_combout\ $end
$var wire 1 I! \spi|cs_record[1]~feeder_combout\ $end
$var wire 1 J! \spi|cs_record[2]~feeder_combout\ $end
$var wire 1 K! \spi|bitcounter~11_combout\ $end
$var wire 1 L! \spi|bitcounter~6_combout\ $end
$var wire 1 M! \spi|bitcounter~8_combout\ $end
$var wire 1 N! \sck~input_o\ $end
$var wire 1 O! \spi|sck_record[2]~feeder_combout\ $end
$var wire 1 P! \spi|current_state~0_combout\ $end
$var wire 1 Q! \spi|Add0~1_combout\ $end
$var wire 1 R! \spi|bitcounter~9_combout\ $end
$var wire 1 S! \spi|Add0~0_combout\ $end
$var wire 1 T! \spi|bitcounter~7_combout\ $end
$var wire 1 U! \spi|current_state~1_combout\ $end
$var wire 1 V! \spi|current_state~2_combout\ $end
$var wire 1 W! \spi|current_state~q\ $end
$var wire 1 X! \spi|data_transfer~0_combout\ $end
$var wire 1 Y! \spi|reg[3]~4_combout\ $end
$var wire 1 Z! \spi|reg[4]~feeder_combout\ $end
$var wire 1 [! \spi|bitcounter~10_combout\ $end
$var wire 1 \! \spi|reg[6]~feeder_combout\ $end
$var wire 1 ]! \spi|reg[7]~feeder_combout\ $end
$var wire 1 ^! \display|s1|Mux6~0_combout\ $end
$var wire 1 _! \display|Mux3~0_combout\ $end
$var wire 1 `! \display|Mux6~0_combout\ $end
$var wire 1 a! \spi|input_shiftreg[2]~feeder_combout\ $end
$var wire 1 b! \spi|input_shiftreg[1]~feeder_combout\ $end
$var wire 1 c! \spi|input_shiftreg[3]~feeder_combout\ $end
$var wire 1 d! \spi|input_shiftreg[0]~feeder_combout\ $end
$var wire 1 e! \display|s0|Mux6~0_combout\ $end
$var wire 1 f! \display|Mux6~1_combout\ $end
$var wire 1 g! \display|s0|Mux5~0_combout\ $end
$var wire 1 h! \display|s1|Mux5~0_combout\ $end
$var wire 1 i! \display|Mux5~0_combout\ $end
$var wire 1 j! \display|Mux5~1_combout\ $end
$var wire 1 k! \display|s1|Mux4~0_combout\ $end
$var wire 1 l! \display|s0|Mux4~0_combout\ $end
$var wire 1 m! \display|Mux4~0_combout\ $end
$var wire 1 n! \display|s1|Mux3~0_combout\ $end
$var wire 1 o! \display|s0|Mux3~0_combout\ $end
$var wire 1 p! \display|Mux3~1_combout\ $end
$var wire 1 q! \display|s1|Mux2~0_combout\ $end
$var wire 1 r! \display|Mux2~0_combout\ $end
$var wire 1 s! \display|s0|Mux2~0_combout\ $end
$var wire 1 t! \display|Mux2~1_combout\ $end
$var wire 1 u! \display|s1|Mux1~0_combout\ $end
$var wire 1 v! \display|Mux1~0_combout\ $end
$var wire 1 w! \display|s0|Mux1~0_combout\ $end
$var wire 1 x! \display|Mux1~1_combout\ $end
$var wire 1 y! \display|s1|Mux0~0_combout\ $end
$var wire 1 z! \display|Mux0~0_combout\ $end
$var wire 1 {! \display|s0|Mux0~0_combout\ $end
$var wire 1 |! \display|Mux0~1_combout\ $end
$var wire 1 }! \spi|sck_record\ [2] $end
$var wire 1 ~! \spi|sck_record\ [1] $end
$var wire 1 !" \spi|sck_record\ [0] $end
$var wire 1 "" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [25] $end
$var wire 1 #" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [24] $end
$var wire 1 $" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [23] $end
$var wire 1 %" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [22] $end
$var wire 1 &" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [21] $end
$var wire 1 '" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [20] $end
$var wire 1 (" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [19] $end
$var wire 1 )" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [18] $end
$var wire 1 *" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [17] $end
$var wire 1 +" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [16] $end
$var wire 1 ," \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [15] $end
$var wire 1 -" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [14] $end
$var wire 1 ." \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [13] $end
$var wire 1 /" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [12] $end
$var wire 1 0" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [11] $end
$var wire 1 1" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [10] $end
$var wire 1 2" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [9] $end
$var wire 1 3" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [8] $end
$var wire 1 4" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [7] $end
$var wire 1 5" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [6] $end
$var wire 1 6" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [5] $end
$var wire 1 7" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [4] $end
$var wire 1 8" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [3] $end
$var wire 1 9" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [2] $end
$var wire 1 :" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [1] $end
$var wire 1 ;" \clocking|LPM_COUNTER_component|auto_generated|counter_reg_bit\ [0] $end
$var wire 1 <" \spi|reg\ [7] $end
$var wire 1 =" \spi|reg\ [6] $end
$var wire 1 >" \spi|reg\ [5] $end
$var wire 1 ?" \spi|reg\ [4] $end
$var wire 1 @" \spi|reg\ [3] $end
$var wire 1 A" \spi|reg\ [2] $end
$var wire 1 B" \spi|reg\ [1] $end
$var wire 1 C" \spi|reg\ [0] $end
$var wire 1 D" \display|seg_select\ [3] $end
$var wire 1 E" \display|seg_select\ [2] $end
$var wire 1 F" \display|seg_select\ [1] $end
$var wire 1 G" \display|seg_select\ [0] $end
$var wire 1 H" \spi|input_shiftreg\ [7] $end
$var wire 1 I" \spi|input_shiftreg\ [6] $end
$var wire 1 J" \spi|input_shiftreg\ [5] $end
$var wire 1 K" \spi|input_shiftreg\ [4] $end
$var wire 1 L" \spi|input_shiftreg\ [3] $end
$var wire 1 M" \spi|input_shiftreg\ [2] $end
$var wire 1 N" \spi|input_shiftreg\ [1] $end
$var wire 1 O" \spi|input_shiftreg\ [0] $end
$var wire 1 P" \spi|cs_record\ [2] $end
$var wire 1 Q" \spi|cs_record\ [1] $end
$var wire 1 R" \spi|cs_record\ [0] $end
$var wire 1 S" \spi|bitcounter\ [3] $end
$var wire 1 T" \spi|bitcounter\ [2] $end
$var wire 1 U" \spi|bitcounter\ [1] $end
$var wire 1 V" \spi|bitcounter\ [0] $end
$var wire 1 W" \display|ALT_INV_seg_select\ [3] $end
$var wire 1 X" \display|ALT_INV_seg_select\ [2] $end
$var wire 1 Y" \display|ALT_INV_seg_select\ [1] $end
$var wire 1 Z" \display|ALT_INV_seg_select\ [0] $end
$var wire 1 [" \display|ALT_INV_Mux0~1_combout\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x!
x"
0#
x$
x%
01
12
x3
14
15
16
17
18
19
0:
x;
x<
x=
x>
0R
1S
1T
1U
1V
0W
0X
0Y
0Z
0[
0\
1]
x^
x_
1`
0a
0b
0c
0d
1e
0f
0g
0h
1i
0j
0k
0l
0m
0n
1o
0p
0q
0r
1s
0t
0u
0v
0w
0x
0y
0z
1{
0|
0}
0~
0!!
0"!
1#!
0$!
0%!
0&!
1'!
0(!
0)!
0*!
1+!
0,!
0-!
0.!
1/!
00!
01!
02!
13!
04!
05!
06!
17!
08!
09!
0:!
1;!
0<!
0=!
0>!
1?!
0@!
0A!
0B!
0C!
1D!
0E!
xF!
xG!
xH!
0I!
0J!
0K!
1L!
0M!
xN!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
1[!
0\!
0]!
0^!
0_!
1`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
1["
1&
1'
1(
1)
1*
0+
0,
0-
0.
0/
00
1?
1@
1A
1B
1C
0D
0E
0F
0G
0H
0I
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
1W"
1X"
1Y"
1Z"
1N
1O
1P
xQ
1J
1K
1L
0M
$end
#1000000
